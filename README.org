#+TITLE: fcitx-remote-for-windows11

This is Windows11 version of project [[https://github.com/cute-jumper/fcitx-remote-for-windows][fcitx-remote-for-windows]].

Changes compared to fcitx-remote-for-windows:
- fcitx-remote-for-windows dose not work on windows11(in my configuration at least), this project fixed it;
    - Cause: The function ~BOOL isEngLayout()~ dose not work properly on Windows11, it always return true. see source code for more information;
- fcitx-remote-for-windows toggle keyboard-layout by simulating hotkey, while this project toggle keyboard-layout by PostMessage() to Windows11.
    - So there's no need to care about =ALT+SHIFT= or =WIN+SPACE= stuff.

* Build Instructions
** Build by Yourself
   This project is built from Visual Studio 2022. Import the project
   into Visual Studio and build the executable file.

** Use pre-built releases
   You can download the pre-built releases at [github release] page of this project.

* Emacs Setup
  Make sure =fcitx-remote= is in your =PATH= and =exec-path=. If not, use the following code in your =init.el=:
  #+BEGIN_SRC elisp
    (let ((fcitx-path "C:/path/to/fcitx-remote"))
      (setenv "PATH" (concat fcitx-path ";" (getenv "PATH")))
      (add-to-list 'exec-path fcitx-path))
  #+END_SRC

* Problems
  Currently this program works great, but still has some minor problems:
  1. =SendInput= can't guarantee the keyboard input sequence it has
     sent to be processed before it returns. In some sense, it is not
     fully /synchronized/ (please correct me if I'm wrong). Therefore,
     sometimes if you're typing *really fast*, the input method may
     not be closed before your next input. I noticed this when I
     tested the =prefix-keys= feature of =fcitx.el=.
  2. =ALT+SHIFT= or =WIN+SPACE= is not configurable right now.

